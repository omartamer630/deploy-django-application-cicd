name: Build & Deploy Django to ECS

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform Action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
      approve:
        description: "Approve this action? (approve/dont)"
        required: true
        default: "dont"
        type: choice
        options:
          - approve
          - dont

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' && github.event.inputs.approve == 'approve' }}
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan -var-file="terraform-prod.tfvars"

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan

    - name: Get ECR Repo from Terraform
      id: get-ecr
      run: |
        ECR_REPO_URL=$(terraform output -raw ecr_repo_url)
        echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV

    - name: Log in to ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      run: |
        cd ./app
        docker build -t $ECR_REPO_URL:${{ env.IMAGE_TAG }} .
        docker push $ECR_REPO_URL:${{ env.IMAGE_TAG }}

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' && github.event.inputs.approve == 'approve' }}
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy Plan
      run: terraform plan -destroy -out=destroy.plan -var-file="terraform-prod.tfvars"

    - name: Terraform Destroy
      run: terraform apply -auto-approve destroy.plan

  safeguard:
      runs-on: ubuntu-latest
      if: ${{ github.event.inputs.approve == 'dont' }}
      steps:
      - name: Abort
        run: echo "Action denied by reviewer."
